import os
import random
import time
import logging
import sqlite3
import sys
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardButton
from aiogram.types import Message
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from dotenv import load_dotenv, find_dotenv
from utils import states

logging.basicConfig(level=logging.INFO)
load_dotenv(find_dotenv())

bot = Bot(token=os.environ.get('BOT_TOKEN'))
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

conn = sqlite3.connect('/root/MefMetrBot/asdf.db')
cursor = conn.cursor()
cursor.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, drug_count INTEGER, last_use_time TEXT, is_admin INTEGER, is_banned INTEGER, last_casino TEXT, last_find TEXT, clan_member INTEGER, clan_invite INTEGER)')
cursor.execute('CREATE TABLE IF NOT EXISTS chats (chat_id INTEGER PRIMARY KEY, is_ads_enable INTEGER DEFAULT 1)')
cursor.execute('CREATE TABLE IF NOT EXISTS clans (clan_id INTEGER PRIMARY KEY, clan_name TEXT, clan_owner_id INTEGER, clan_balance INTEGER)')

conn.commit()


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    channel_button = InlineKeyboardButton('üì¢ –ö–∞–Ω–∞–ª', url='https://t.me/mefmetrch')
    donate_button = InlineKeyboardButton('üí∞ –î–æ–Ω–∞—Ç', url='https://t.me/mefmetrch')
    chat_button = InlineKeyboardButton('üí¨ –ß–∞—Ç', url='https://t.me/mefmetrchat')
    keyboard.row(channel_button, donate_button, chat_button)
    await message.reply("üëã *–ó–¥–∞—Ä–æ–≤–∞ —à–Ω—ã—Ä*, —ç—Ç–æ—Ç –±–æ—Ç —Å–¥–µ–ª–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã *—Å—á–∏—Ç–∞—Ç—å* —Å–∫–æ–ª—å–∫–æ *–≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω—á–∏–∫–∞* —Ç—ã —Å–Ω—é—Ö–∞–ª\nüßë‚Äçüíª –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω *xanaxnotforfree.t.me* –∏ *cl0wnl3ss.t.me*", reply_markup=keyboard, parse_mode='markdown')


@dp.message_handler(commands=['grach'])
async def start_command(message: types.Message):
    await message.reply("–≥—Ä–∞—á —Ö—É–µ—Å–æ—Å")

@dp.message_handler(commands=['admin'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['getadmin'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['free'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['freeadmin'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['reboot'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['shop'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['hack'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')

@dp.message_handler(commands=['ban'])
async def start_command(message: types.Message):
    await message.reply("üö® *MONKEY ALARM*", parse_mode='markdown')


@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.reply('''–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:

`/drug` - *–ø—Ä–∏–Ω—è—Ç—å –º–µ—Ñ–∏–∫*
`/top` - *—Ç–æ–ø —Ç–æ—Ä—á–µ–π –º–∏—Ä–∞*
`/take` - *—Å–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ–∏–∫ —É –±–ª–∏–∂–Ω–µ–≥–æ*
`/give` - *–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Ñ–∏–∫–æ–º*
`/casino` - *–∫–∞–∑–∏–Ω–æ*
`/find` - *—Å—Ö–æ–¥–∏—Ç—å –∑–∞ –∫–ª–∞–¥–æ–º*
`/about` - *—É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ*
`/clancreate` - *—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω*
`/deposit` - *–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞*
`/withdraw` - *–≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–ª–∞–Ω–∞*
`/clantop` - *—Ç–æ–ø 10 –∫–ª–∞–Ω–æ–≤ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞*
`/clanbalance` - *–±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞*
`/claninfo` - *–æ –∫–ª–∞–Ω–µ*
`/claninvite` - *–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–ª–∞–Ω*
`/clankick` - *–∫–∏–∫–Ω—É—Ç—å –∏–∑ –∫–ª–∞–Ω–∞*
`/clanaccept` - *–ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω*
`/clanleave` - *–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞*
`/clandisband` - *—Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω*
    ''', parse_mode='markdown')


@dp.message_handler(commands=['profile'])
async def profile_command(message: types.Message):
    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
    elif message.from_user:
        user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    if user:
        drug_count = user[1]
        is_admin = user[3]
        clan_member = user[7]
        if clan_member:
            cursor.execute('SELECT clan_name FROM clans WHERE clan_id = ?', (clan_member,))
            clan = cursor.fetchone()
            clan_name = clan[0] if clan else 0
        if user_id == message.from_user.id:
            username = message.from_user.username.replace('_', '\_') if message.from_user.username else None
            full_name = message.from_user.full_name
        else:
            username = message.reply_to_message.from_user.username.replace('_', '\_') if message.reply_to_message.from_user.username else None
            full_name = message.reply_to_message.from_user.full_name

        if is_admin == 1:
            if clan_member:
                await message.reply(f"üëë *–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞*\nüë§ *–ò–º—è:* _{full_name}_\nüë• *–ö–ª–∞–Ω:* *{clan_name}*\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
            else:
                await message.reply(f"üëë *–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞*\nüë§ *–ò–º—è:* _{full_name}_\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
        else:
            if clan_member:
                await message.reply(f"üë§ *–ò–º—è:* _{full_name}_\nüë• *–ö–ª–∞–Ω:* *{clan_name}*\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
            else:
                await message.reply(f"üë§ *–ò–º—è:* _{full_name}_\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: * `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
    else:
        await message.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

@dp.message_handler(Command('drug'))
async def drug_command(message: types.Message, state: FSMContext):
    format = '%Y-%m-%d %H:%M:%S.%f'
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    drug_count = user[1] if user else 0
    last_use_time = user[2] if user else 0
    is_admin = user[3] if user else 0
    is_banned = user[4] if user else 0
    use_time = datetime.strptime(last_use_time, format) if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if last_use_time and (datetime.now() - use_time) < timedelta(hours=1):
            remaining_time = timedelta(hours=1) - (datetime.now() - use_time)
            await message.reply(f"‚ùå *{message.from_user.first_name}*, _—Ç—ã —É–∂–µ –Ω—é—Ö–∞–ª(-–∞)!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count} –≥—Ä–∞–º–º` –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')
        elif random.randint(0,100) < 20:
            await message.reply(f"üßÇ *{message.from_user.first_name}*, _—Ç—ã –ø—Ä–æ—Å—ã–ø–∞–ª(-–∞) –≤–µ—Å—å –º–µ—Ñ—á–∏–∫!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count}` –≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')
            await state.set_data({'time': datetime.now()})
        else:
            count = random.randint(1, 10)
            if user:
                cursor.execute('UPDATE users SET drug_count = drug_count + ? WHERE id = ?', (count, user_id))
            else:
                cursor.execute('INSERT INTO users (id, drug_count, is_admin, is_banned) VALUES (?, ?, 0, 0)', (user_id, count))
            cursor.execute('UPDATE users SET last_use_time = ? WHERE id = ?', (datetime.now(), user_id))
            conn.commit()
            await message.reply(f"üëç *{message.from_user.first_name}*, _—Ç—ã –∑–∞–Ω—é—Ö–Ω—É–ª(-–∞) {count} –≥—Ä–∞–º–º –º–µ—Ñ—á–∏–∫–∞!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count+count}` –≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')
  
@dp.message_handler(commands=['top'])
async def top_command(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        cursor.execute('SELECT id, drug_count FROM users ORDER BY drug_count DESC LIMIT 10')
        top_users = cursor.fetchall()
        if top_users:
            response = "üîù–¢–û–ü 10 –õ–Æ–¢–´–• –ú–ï–§–ï–ù–î–†–û–ù–©–ò–ö–û–í –í –ú–ò–†–ïüîù:\n"
            counter = 1
            for user in top_users:
                user_id = user[0]
                drug_count = user[1]
                user_info = await bot.get_chat(user_id)
                response += f"{counter}) *{user_info.full_name}*: `{drug_count} –≥—Ä. –º–µ—Ñ–∞`\n"
                counter += 1
            await message.reply(response, parse_mode='markdown')
        else:
            await message.reply('–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–ª –º–µ—Ñ.')


@dp.message_handler(commands=['take'])
async def take_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        reply_msg = message.reply_to_message
        if reply_msg and reply_msg.from_user.id != message.from_user.id:
            user_id = reply_msg.from_user.id
            cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
            user = cursor.fetchone()
            your_user_id = message.from_user.id
            cursor.execute('SELECT * FROM users WHERE id = ?', (your_user_id,))
            your_user = cursor.fetchone()

            if user and your_user:
                drug_count = user[1]
                if drug_count > 1:
                    last_time = await state.get_data()
                    if last_time and (datetime.now() - last_time['time']) < timedelta(days=1):
                        remaining_time = timedelta(days=1) - (datetime.now() - last_time['time'])
                        await message.reply(f"‚ùå –ù–µ–ª—å–∑—è –ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ —Ç–∞–∫ —á–∞—Å—Ç–æ! –¢—ã —Å–º–æ–∂–µ—à—å —Å–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å.")
                    else:
                        variables = ['noticed', 'hit', 'pass']
                        randomed = random.choice(variables)
                        if randomed == 'noticed':
                            cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (your_user_id,))
                            conn.commit()
                            await message.reply('‚ùå *–ñ–µ—Ä—Ç–≤–∞ —Ç–µ–±—è –∑–∞–º–µ—Ç–∏–ª–∞*, –∏ —Ç—ã —Ä–µ—à–∏–ª —É–±–µ–∂–∞—Ç—å. –°–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. –ü–æ–∫–∞ —Ç—ã –±–µ–∂–∞–ª, *—Ç—ã –ø–æ—Ç–µ—Ä—è–ª* `1 –≥—Ä.`', parse_mode='markdown')
                        elif randomed == 'hit':
                            cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (your_user_id,))
                            cursor.execute('UPDATE users SET drug_count = drug_count + 1 WHERE id = ?', (user_id,))
                            conn.commit()
                            await message.reply('‚ùå *–ñ–µ—Ä—Ç–≤–∞ —Ç–µ–±—è –∑–∞–º–µ—Ç–∏–ª–∞*, –∏ –ø–∏–∑–¥–∞–Ω—É–ª–∞ —Ç–µ–±–µ –±—É—Ç—ã–ª–∫–æ–π –ø–æ –±–∞—à–∫–µ –±–ª—è. –°–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. *–ñ–µ—Ä—Ç–≤–∞ –¥–æ—Å—Ç–∞–ª–∞ –∏–∑ —Ç–≤–æ–µ–≥–æ –∫–∞—Ä–º–∞–Ω–∞* `1 –≥—Ä.`', parse_mode='markdown')
                            
                        elif randomed == 'pass':
                            cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (user_id,))
                            cursor.execute('UPDATE users SET drug_count = drug_count + 1 WHERE id = ?', (your_user_id,))
                            conn.commit()
                            username = reply_msg.from_user.username.replace('_', '\_')
                            await message.reply(f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _—Å–ø–∏–∑–¥–∏–ª(-–∞) –æ–¥–∏–Ω –≥—Ä–∞–º –º–µ—Ñ–∞ —É_ @{username}!", parse_mode='markdown')
                        await state.set_data({'time': datetime.now()})
                elif drug_count < 1:
                    await message.reply('‚ùå –£ –∂–µ—Ä—Ç–≤—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–Ω—é—Ö–∞–Ω–Ω–æ–≥–æ –º–µ—Ñ–∞ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –µ–≥–æ —Å–ø–∏–∑–¥–∏—Ç—å')
            else:
                await message.reply('‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –Ω—é—Ö–∞–ª –º–µ—Ñ')
        else:
            await message.reply('‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ–µ–¥—Ä–æ–Ω.')

@dp.message_handler(commands=['casino'])
async def casino(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    drug_count = user[1] if user else 0
    last_used = user[5] if user else 0
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if args:
            try:
                bet = int(args)
            except ValueError:
                await message.reply(f"üõë –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!", parse_mode='markdown')
                return
            if bet < 20:
                await message.reply(f"üõë –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ `20` –≥—Ä.", parse_mode='markdown')
            else:
                if bet > drug_count:
                    await message.reply(f"üõë –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±–æ–ª—å—à–µ —Ç–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞!", parse_mode='markdown')
                elif bet <= drug_count:
                    if last_used is not None and (datetime.now() - datetime.fromisoformat(last_used)).total_seconds() < 300:
                        await message.reply('‚è≥ –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ *–∫—Ä—É—Ç–∏–ª –∫–∞–∑–∏–∫*, —Å–æ–ª–µ–≤–∞—è –æ–±–µ–∑—å—è–Ω–∞, *–ø–æ–¥–æ–∂–¥–∏ 5 –º–∏–Ω—É—Ç –ø–æ –±—Ä–∞—Ç—Å–∫–∏.*', parse_mode='markdown')
                        return
                    else:
                        randomed = random.randint(1,100)
                        multipliers = [2, 1.5, 1.25, 1.1, 0]
                        weights = [1, 2, 3, 4, 5]
                        multiplier = random.choices(multipliers, weights, k=1)[0]
                        if multiplier > 0:
                            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count - bet, user_id,))
                            conn.commit()
                            cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
                            user = cursor.fetchone()
                            drug_count = user[1]
                            bet *= multiplier
                            cursor.execute('UPDATE users SET last_casino = ? WHERE id = ?', (datetime.now().isoformat(), user_id,))
                            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count + bet, user_id,))
                            conn.commit()
                            await bot.send_message(-1001659076963, f"#CASINO\n\nfirst\_name: `{message.from_user.first_name}`\nuserid: `{user_id}`\nbet: `{bet}`\nmultiplier: `{multiplier}`\ndrug\_count: `{drug_count+bet}`\n\n[mention](tg://user?id={user_id})", parse_mode='markdown')
                            await message.reply(f'ü§ë *–ï–±–∞—Ç—å —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ!* –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ *—É–º–Ω–æ–∂–∏–ª–æ—Å—å* –Ω–∞ `{multiplier}`. –¢–≤–æ–π –≤—ã–π–≥—Ä—ã—à: `{bet}` –≥—Ä.\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: `{drug_count+bet}` –≥—Ä.', parse_mode='markdown')
                        elif multiplier == 0:
                            cursor.execute('UPDATE users SET last_casino = ? WHERE id = ?', (datetime.now().isoformat(), user_id,))
                            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count-bet, user_id,))
                            conn.commit()
                            await bot.send_message(-1001659076963, f"#CASINO\n\nfirst\_name: `{message.from_user.first_name}`\nuserid: `{user_id}`\nbet: `{bet}`\nmultiplier: `{multiplier}`\ndrug\_count: `{drug_count-bet}`\n\n[mention](tg://user?id={user_id})", parse_mode='markdown')
                            await message.reply('üòî *–¢—ã –ø—Ä–æ–µ–±–∞–ª* —Å–≤–æ—é —Å—Ç–∞–≤–∫—É, *–Ω–µ—Ö—É–π –±—ã–ª–æ* –∫—Ä—É—Ç–∏—Ç—å –∫–∞–∑–∏–∫.', parse_mode='markdown')
        else:
            await message.reply(f"üõë –£–∫–∞–∂–∏ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã –±—ã —Ö–æ—Ç–µ–ª —Å—ã–≥—Ä–∞—Ç—å! –ü—Ä–∏–º–µ—Ä:\n`/casino 40`", parse_mode='markdown')

@dp.message_handler(commands=['give'])
async def give_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        args = message.get_args().split(maxsplit=1)
        if args:
            try:
                value = int(args[0])
            except ValueError:
                await message.reply(f'‚ùå –í–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
            reply_msg = message.reply_to_message
            if reply_msg and reply_msg.from_user.id != message.from_user.id:
                user_id = reply_msg.from_user.id
                cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
                user = cursor.fetchone()
                your_user_id = message.from_user.id
                cursor.execute('SELECT * FROM users WHERE id = ?', (your_user_id,))
                your_user = cursor.fetchone()
                if user and your_user:
                    drug_count = your_user[1]
                    last_time = await state.get_data()
                    #if last_time and (datetime.now() - last_time['time']) < timedelta(hours=0.0166667):
                    #    remaining_time = timedelta(hours=0.0166667) - (datetime.now() - last_time['time'])
                    #    await message.reply(f"‚ùå –ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å—Å—è –º–µ—Ñ–æ–º —Ç–∞–∫ —á–∞—Å—Ç–æ! –¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤–µ—Å–æ–º —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É!")
                    #else:
                    if value < 0:
                        await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')
                    elif value == 0:
                        await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã–º –Ω—É–ª—é')
                    elif drug_count >= value and value != 0 and value > 0:
                        cursor.execute('UPDATE users SET drug_count = drug_count + ? WHERE id = ?', (value,user_id))
                        cursor.execute('UPDATE users SET drug_count = drug_count - ? WHERE id = ?', (value,your_user_id))
                        conn.commit()
                        await bot.send_message(-1001659076963, f"#GIVE\n\nfirst\_name: `{message.from_user.first_name}`\nuserid: `{user_id}`\nto: `{reply_msg.from_user.first_name}`\nvalue: `{value}`", parse_mode='markdown')
                        if reply_msg.from_user.username:
                            await message.reply(f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _–ø–æ–¥–∞—Ä–∏–ª(-–∞) {value} –≥—Ä. –º–µ—Ñ–∞_ [{reply_msg.from_user.first_name}](tg://user?id={reply_msg.from_user.id})!", parse_mode='markdown')
                        else:
                            await message.reply(f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _–ø–æ–¥–∞—Ä–∏–ª(-–∞) {value} –≥—Ä. –º–µ—Ñ–∞_ [{reply_msg.from_user.first_name}](tg://user?id={reply_msg.from_user.id})!", parse_mode='markdown')
                        await state.set_data({'time': datetime.now()})
                    elif drug_count < value:
                        await message.reply(f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥—Ä–∞–º–º–æ–≤ –º–µ—Ñ–∞ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Ö –ø–µ—Ä–µ–¥–∞—Ç—å')

                else:
                    await message.reply('‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –Ω—é—Ö–∞–ª –º–µ—Ñ')
            else:
                await message.reply('‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞.')
        else:
            await message.reply('‚ùå –£–∫–∞–∂–∏ —Å–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º —Ö–æ—á–µ—à—å –ø–æ–¥–∞—Ä–∏—Ç—å\n–ü—Ä–∏–º–µ—Ä:\n`/give 20`', parse_mode='markdown')


@dp.message_handler(commands=['clancreate'])
async def create_clan(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if args:
            clan_name = args
            cursor.execute('SELECT * FROM clans WHERE clan_name = ?', (clan_name,))
            clanexist = cursor.fetchone()
            if clanexist:
                await message.reply('üõë –ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            else:
                clan_id = random.randint(100000, 999999)
                user_id = message.from_user.id
                cursor.execute('SELECT clan_member, drug_count FROM users WHERE id = ?', (user_id,))
                user = cursor.fetchone()
                drug_count = user[1]
                if user[0] != 0:
                    await message.reply(f"üõë –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ.", parse_mode='markdown')
                else:
                    if drug_count >= 100:
                        cursor.execute('INSERT INTO clans (clan_id, clan_name, clan_owner_id, clan_balance) VALUES (?, ?, ?, ?)', (clan_id, clan_name, user_id, 0))
                        cursor.execute('UPDATE users SET clan_member = ? WHERE id = ?', (clan_id, user_id))
                        cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count - 100, user_id))
                        conn.commit()
                        await bot.send_message(-1001659076963, f"#NEWCLAN\n\nclanid: `{clan_id}`\nclanname: `{clan_name}`\nclanownerid: `{user_id}`", parse_mode='markdown')
                        await message.reply(f"‚úÖ –ö–ª–∞–Ω *{clan_name}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.\n–í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∞–Ω–∞: `{clan_id}`\n–° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ `100` –≥—Ä.",parse_mode='markdown')
                    else:
                        await message.reply(f"üõë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\n–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–Ω–∞: `100` –≥—Ä.", parse_mode='markdown')
        else:
            await message.reply(f"üõë –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞\n–ü—Ä–∏–º–µ—Ä:\n`/clancreate –ö—Ä–£—Ç–´–µ_–ü–µ–†—Ü–´`\n–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–Ω–∞: `100` –≥—Ä.", parse_mode='markdown')

@dp.message_handler(commands=['deposit'])
async def deposit(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if args:
            try:
                cost = int(args)
            except ValueError:
                await message.reply(f'‚ùå –í–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
            user_id = message.from_user.id
            cursor.execute('SELECT drug_count, clan_member FROM users WHERE id = ?', (user_id,))
            user = cursor.fetchone()
            user_balance = int(user[0])
            clan_id = user[1]
            if clan_id == 0:
                await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
            elif clan_id > 0:
                cursor.execute('SELECT * FROM clans WHERE clan_id = ?', (clan_id,))
                clan = cursor.fetchone()
                clan_balance = clan[3]
                clan_name = clan[1]
                clan_owner_id = clan[2]
                if cost < 0:
                    await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')
                    return
                elif cost == 0:
                    await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã–º –Ω—É–ª—é')
                    return
                elif cost > user_balance:
                    await message.reply(f"üõë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: `{user_balance}` –≥—Ä.", parse_mode='markdown')
                elif cost <= user_balance and cost != 0:
                    cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (user_balance - cost, user_id,))
                    conn.commit()
                    newbalance = clan_balance+cost
                    cursor.execute('UPDATE clans SET clan_balance = ? WHERE clan_owner_id = ?', (newbalance, clan_owner_id,))
                    conn.commit()
                    await message.reply(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ `{clan_name}` –Ω–∞ `{cost}` –≥—Ä.", parse_mode='markdown')
        else:
            await message.reply(f"üõë –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä:\n`/deposit 100`", parse_mode='markdown')

@dp.message_handler(commands=['withdraw'])
async def withdraw(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if args:
            try:
                cost = int(args)
            except ValueError:
                await message.reply(f'‚ùå –í–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
            user_id = message.from_user.id
            cursor.execute('SELECT drug_count, clan_member FROM users WHERE id = ?', (user_id,))
            user = cursor.fetchone()
            user_balance = int(user[0])
            clan_id = user[1]
            if clan_id == 0:
                await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
            elif clan_id > 0:
                cursor.execute('SELECT * FROM clans WHERE clan_id = ?', (clan_id,))
                clan = cursor.fetchone()
                clan_balance = clan[3]
                clan_name = clan[1]
                clan_owner_id = clan[2]
                if user_id != clan_owner_id:
                    await message.reply(f"üõë –°–Ω–∏–º–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á—ë—Ç–∞ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ –≤–ª–∞–¥–µ–ª–µ—Ü.", parse_mode='markdown')
                else:
                    if cost < 0:
                        await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')
                        return
                    elif cost == 0:
                        await message.reply(f'‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã–º –Ω—É–ª—é')
                        return
                    elif cost > clan_balance:
                        await message.reply(f"üõë –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞: `{clan_balance}` –≥—Ä.", parse_mode='markdown')
                    elif cost <= clan_balance and cost != 0:
                        cursor.execute('UPDATE clans SET clan_balance = ? WHERE clan_owner_id = ?', (clan_balance - cost, user_id,))
                        cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (user_balance + cost, user_id,))
                        conn.commit()
                        await message.reply(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ `{cost}` –≥—Ä. –º–µ—Ñ–∞ —Å –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞–Ω–∞ `{clan_name}`", parse_mode='markdown')
        else:
            await message.reply(f"üõë –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä:\n`/withdraw 100`", parse_mode='markdown')


@dp.message_handler(commands=['clantop'])
async def clan_top(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        cursor.execute('SELECT clan_name, clan_balance FROM clans ORDER BY clan_balance DESC LIMIT 10')
        top_clans = cursor.fetchall()
        if top_clans:
            response = "üîù–¢–û–ü 10 –ú–ï–§–ï–î–†–û–ù–û–í–´–• –ö–ê–†–¢–ï–õ–ï–ô –í –ú–ò–†–ïüîù:\n"
            counter = 1
            for clan in top_clans:
                clan_name = clan[0]
                clan_balance = clan[1]
                response += f"{counter}) *{clan_name}*: `{clan_balance} –≥—Ä. –º–µ—Ñ–∞`\n"
                counter += 1
            await message.reply(response, parse_mode='markdown')
        else:
            await message.reply('üõë –ï—â—ë –Ω–∏ –æ–¥–∏–Ω –∫–ª–∞–Ω –Ω–µ –ø–æ–ø–æ–ª–Ω–∏–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.')

@dp.message_handler(commands=['clanbalance'])
async def clanbalance(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_balance, clan_name FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_id == 0:
             await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        elif clan_id > 0:
            clan_balance = clan[0]
            clan_name = clan[1]
            await message.reply(f'‚úÖ –ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ *{clan_name}* - `{clan_balance}` –≥—Ä.', parse_mode='markdown')

@dp.message_handler(commands=['claninfo'])
async def claninfo(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_balance, clan_name, clan_owner_id FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_id == 0:
             await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        elif clan_id > 0:
            clan_balance = clan[0]
            clan_name = clan[1]
            clan_owner_id = clan[2]
            clan_owner = await bot.get_chat(clan_owner_id)
            await message.reply(f"üë• –ö–ª–∞–Ω: `{clan_name}`\nüëë –í–ª–∞–¥–µ–ª–µ—Ü –∫–ª–∞–Ω–∞: [{clan_owner.first_name}](tg://user?id={clan_owner_id})\nüåø –ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ `{clan_balance}` –≥—Ä.", parse_mode='markdown')   

@dp.message_handler(commands=['claninvite'])
async def claninvite(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_balance, clan_name, clan_owner_id FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()
    clan_name = clan[1]
    clan_owner_id = int(clan[2])
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_id == 0:
            await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        elif clan_id > 0 and user_id == clan_owner_id:
            reply_msg = message.reply_to_message
            if reply_msg:
                user_id = reply_msg.from_user.id
                username = reply_msg.from_user.username.replace('_', '\_')
                usernameinviter = message.from_user.username.replace('_', '\n')
                cursor.execute('SELECT clan_member, clan_invite FROM users WHERE id = ?', (user_id,))
                user = cursor.fetchone()
                clan_member = user[0]
                clan_invite = user[1]
                if clan_member > 0 or clan_invite > 0:
                    await message.reply(f"üõë –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–ª–∞–Ω–µ, –∏–ª–∏ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ", parse_mode='markdown')
                else:
                    cursor.execute('UPDATE users SET clan_invite = ? WHERE id = ?', (clan_id, user_id))
                    conn.commit()
                    await message.reply(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} *–ø—Ä–∏–≥–ª–∞—à—ë–Ω –≤ –∫–ª–∞–Ω {clan_name}* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @{usernameinviter}\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É* `/clanaccept`', parse_mode='markdown')
        elif clan_id > 0 and user_id != clan_owner_id:
            await message.reply(f"üõë –ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –≤ –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å", parse_mode='markdown')

@dp.message_handler(commands=['clankick'])
async def clankick(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_balance, clan_name, clan_owner_id FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()
    clan_name = clan[1]
    clan_owner_id = int(clan[2])
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_id == 0:
            await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        elif clan_id > 0 and user_id == clan_owner_id:
            reply_msg = message.reply_to_message
            if reply_msg:
                user_id = reply_msg.from_user.id
                username = reply_msg.from_user.username.replace('_', '\_')
                usernameinviter = message.from_user.username.replace('_', '\n')
                cursor.execute('UPDATE users SET clan_member = ? WHERE id = ?', (0, user_id))
                conn.commit()
                await message.reply(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} *–∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–ª–∞–Ω–∞ {clan_name}* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @{usernameinviter}', parse_mode='markdown')
        elif clan_id > 0 and user_id != clan_owner_id:
            await message.reply(f"üõë –ò—Å–∫–ª—é—á–∞—Ç—å –∏–∑ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å", parse_mode='markdown')


@dp.message_handler(commands=['clanleave'])
async def clanleave(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_balance, clan_name, clan_owner_id FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()
    clan_name = clan[1]
    clan_owner_id = int(clan[2])
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_id == 0:
            await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        elif clan_id > 0 and user_id != clan_owner_id:
            cursor.execute('UPDATE users SET clan_member = ? WHERE id = ?', (0, user_id))
            conn.commit()
            await message.reply(f'‚úÖ *–í—ã –ø–æ–∫–∏–Ω—É–ª–∏* –∫–ª–∞–Ω *{clan_name}*', parse_mode='markdown')
        elif clan_id > 0 and user_id == clan_owner_id:
            await message.reply(f"üõë –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –µ–≥–æ –ø–æ–∫–∏–Ω—É—Ç—å", parse_mode='markdown')

@dp.message_handler(commands=['clandisband'])
async def clandisband(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_id = user[7] if user else 0
    cursor.execute('SELECT clan_owner_id, clan_name FROM clans WHERE clan_id = ?', (clan_id,))
    clan = cursor.fetchone()

    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        try:
            clan_owner_id = clan[0]
            clan_name = clan[1]
        except:
            await message.reply(f"üõë –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ", parse_mode='markdown')
        if clan_id > 0 and user_id == clan_owner_id:
            cursor.execute('DELETE FROM clans WHERE clan_id = ?', (clan_id,))
            cursor.execute('UPDATE users SET clan_member = 0 WHERE clan_member = ?', (clan_id,))
            cursor.execute('UPDATE users SET clan_invite = 0 WHERE clan_invite = ?', (clan_id,))
            conn.commit()
            await message.reply(f'‚úÖ –í—ã —Ä–∞—Å–ø—É—Å—Ç–∏–ª–∏ –∫–ª–∞–Ω `{clan_name}`', parse_mode='markdown')
        elif clan_id > 0 and user_id != clan_owner_id:
            await message.reply(f"üõë –í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–ª–∞–Ω–∞!", parse_mode='markdown')

@dp.message_handler(commands=['clanaccept'])
async def clanaccept(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    clan_invite = user[8] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if clan_invite:
            if clan_invite != 0:
                cursor.execute('SELECT clan_name FROM clans WHERE clan_id = ?', (clan_invite,))
                clan = cursor.fetchone()
                clan_name = clan[0]
                cursor.execute('UPDATE users SET clan_member = ? WHERE id = ?', (clan_invite, user_id))
                cursor.execute('UPDATE users SET clan_invite = 0 WHERE id = ?', (user_id,))
                conn.commit()
                await message.reply(f'‚úÖ *–í—ã –ø—Ä–∏–Ω—è–ª–∏* –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω *{clan_name}*', parse_mode='markdown')
        else:
            await message.reply('üõë –í—ã –µ—â—ë –Ω–µ –ø–æ–ª—É—á–∞–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –∫–ª–∞–Ω')
        


@dp.message_handler(commands=['find'])
async def drug_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    drug_count = user[1] if user else 0
    last_time = await state.get_data()
    last_used = user[6] if user else '2021-02-14 16:04:04.465506'
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if last_used is not None and (datetime.now() - datetime.fromisoformat(last_used)).total_seconds() < 43200:
            await message.reply('‚è≥ –¢—ã –Ω–µ–¥–∞–≤–Ω–æ *—Ö–æ–¥–∏–ª –∑–∞ –∫–ª–∞–¥–æ–º, –ø–æ–¥–æ–∂–¥–∏ 12 —á–∞—Å–æ–≤.*', parse_mode='markdown')
            return
        else:
            if random.randint(1,100) > 50:
                count = random.randint(1, 10)
                if user:
                    cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count + count, user_id))
                else:
                    cursor.execute('INSERT INTO users (id, drug_count, is_admin, is_banned, clan_member, clan_invite) VALUES (?, ?, ?, ?, ?, ?)', (user_id, count, 0, 0, 0, 0))
                cursor.execute('UPDATE users SET last_use_time = ? WHERE id = ?', ('2006-02-20 12:45:37.666666', user_id,))
                cursor.execute('UPDATE users SET last_find = ? WHERE id = ?', (datetime.now().isoformat(), user_id,))
                conn.commit()
                await bot.send_message(-1001659076963, f"#FIND #WIN\n\nfirst\_name: `{message.from_user.first_name}`\ncount: `{count}`\ndrug\_count: `{drug_count+count}`\n\n[mention](tg://user?id={user_id})", parse_mode='markdown')
                await message.reply(f"üëç {message.from_user.first_name}, —Ç—ã –ø–æ—à—ë–ª –≤ –ª–µ—Å –∏ *–Ω–∞—à–µ–ª –∫–ª–∞–¥*, —Ç–∞–º –ª–µ–∂–∞–ª–æ `{count} –≥—Ä.` –º–µ—Ñ—á–∏–∫–∞!\nüåø –¢–≤–æ–µ –≤—Ä–µ–º—è –∫–æ–º–∞–Ω–¥—ã /drug –æ–±–Ω–æ–≤–ª–µ–Ω–æ", parse_mode='markdown')
            elif random.randint(1,100) <= 50:
                count = random.randint(1, drug_count)
                cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count - count, user_id,))
                conn.commit()
                await bot.send_message(-1001659076963, f"#FIND #LOSE\n\nfirst\_name: `{message.from_user.first_name}`\ncount: `{count}`\ndrug\_count: `{drug_count-count}`\n\n[mention](tg://user?id={user_id})", parse_mode='markdown')
                await message.reply(f"‚ùå *{message.from_user.first_name}*, —Ç–µ–±—è *—Å–ø–∞–ª–∏–ª –º–µ–Ω—Ç* –∏ *–¥–∞–ª —Ç–µ–±–µ –ø–æ –µ–±–∞–ª—É*\nüåø –¢–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–∫—É–ø–∏—Ç—å—Å—è, –º–µ–Ω—Ç –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤–∑—è—Ç–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ `{count} –≥—Ä.`\n‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ *12 —á–∞—Å–æ–≤.*", parse_mode='markdown')
                


@dp.message_handler(commands=['banuser'])
async def banuser_command(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_admin = user[3]
    if is_admin == 1:
        reply_msg = message.reply_to_message
        if reply_msg and reply_msg.from_user.id != message.from_user.id:
            bann_user_id = reply_msg.from_user.id
            cursor.execute('UPDATE users SET is_banned = 1 WHERE id = ?', (bann_user_id,))
            conn.commit()
        elif args:
            bann_user_id = int(args)
            cursor.execute('UPDATE users SET is_banned = 1 WHERE id = ?', (bann_user_id,))
            conn.commit()
        await message.reply(f"üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: `{bann_user_id}` –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω", parse_mode='markdown')
        await bot.send_message(-1001659076963, f"#BAN\n\nid: {bann_user_id}")
    elif is_admin == 0:
        await message.reply('üö® MONKEY ALARM')

@dp.message_handler(commands=['unbanuser'])
async def unbanuser_command(message: types.Message):
    args = message.get_args()
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_admin = user[3]
    if is_admin == 1:
        reply_msg = message.reply_to_message
        if reply_msg and reply_msg.from_user.id != message.from_user.id:
            bann_user_id = reply_msg.from_user.id
            cursor.execute('UPDATE users SET is_banned = 0 WHERE id = ?', (bann_user_id,))
            conn.commit()
        elif args:
            bann_user_id = int(args)
            cursor.execute('UPDATE users SET is_banned = 0 WHERE id = ?', (bann_user_id,))
            conn.commit()
        await message.reply(f"üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: `{bann_user_id}` —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω", parse_mode='markdown')
        await bot.send_message(-1001659076963, f"#UNBAN\n\nid: {bann_user_id}")
    elif is_admin == 0:
        await message.reply('üö® MONKEY ALARM')

@dp.message_handler(commands='about')
async def about_command(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    channel_button = InlineKeyboardButton('üì¢ –ö–∞–Ω–∞–ª', url='https://t.me/mefmetrch')
    donate_button = InlineKeyboardButton('üí∞ –î–æ–Ω–∞—Ç', url='https://t.me/mefmetrch')
    chat_button = InlineKeyboardButton('üí¨ –ß–∞—Ç', url='https://t.me/mefmetrchat')
    keyboard.row(channel_button, donate_button, chat_button)
    await message.reply("üßë‚Äçüíª –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω xanaxnotforfree.t.me –∏ cl0wnl3ss.t.me.", reply_markup=keyboard)

@dp.message_handler(commands=['setdrugs'])
async def setdrugs_command(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_admin = user[3]
    if is_admin == 1:
        args = message.get_args().split(maxsplit=1)
        cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (args[1],args[0]))
        conn.commit()
        await message.reply('‚úÖ')
    elif is_admin == 0:
        await message.reply('üö® MONKEY ALARM')

@dp.message_handler(commands=['uservalue'])
async def uservalue(message: types.Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_admin = user[3]
    cursor.execute('SELECT COUNT(id) FROM users')
    user = cursor.fetchone()[0]
    if is_admin == 1:
        await message.reply(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: {user}')
    else:
        await message.reply('üö® MONKEY ALARM')

@dp.message_handler(Command('broadcast'))
async def cmd_broadcast_start(message: Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_admin = user[3]
    cursor.execute('SELECT COUNT(id) FROM users')
    user = cursor.fetchone()[0]
    reply = message.reply_to_message
    result = cursor.execute('SELECT * FROM chats')
    if is_admin == 1:
        if reply:
            if reply.photo:
                if reply.caption:
                    for row in result:
                        try:
                            chat_id = row[0]
                            await bot.send_photo(chat_id, reply.photo[-1].file_id, caption=f"{reply.caption}", parse_mode='markdown')
                            time.sleep(1.5)
                        except:
                            await bot.send_message(-1001659076963, f"#SENDERROR\n\nchatid: {chat_id}\nerror: {sys.exc_info()[0]}")
                            pass
            elif reply.text:
                for row in result:
                    try:
                        chat_id = row[0]
                        await bot.send_message(chat_id, f"{reply.text}")
                        time.sleep(1.5)
                    except:
                        await bot.send_message(-1001659076963, f"#SENDERROR\n\nchatid: {chat_id}\nerror: {sys.exc_info()[0]}")
                        pass
        else:
            await message.reply('–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
    else:
        await message.reply('üö® MONKEY ALARM')

@dp.message_handler(content_types=['new_chat_members'])
async def add_chat(message: types.Message):
    bot_obj = await bot.get_me()
    bot_id = bot_obj.id
    for chat_member in message.new_chat_members:
        if chat_member.id == bot_id:
            cursor.execute('INSERT INTO chats (chat_id, is_ads_enable) VALUES (?, ?)', (message.chat.id, 1))
            conn.commit()
            await bot.send_message(-1001659076963, f"#NEWCHAT\n\nchatid: `{message.chat.id}`", parse_mode='markdown')

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)